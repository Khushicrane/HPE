
#
# RL_3X_FIN_RZ_L2_SO_DOR_LOCAL_CRNCY_ETL.py
#

import os
import json
import io
import sys
from datetime import datetime
from pyspark.sql import SparkSession, DataFrame, Row, SQLContext
from pyspark import SparkContext
from pyspark.sql.window import Window
import pyspark.sql.types as T
import pyspark.sql.functions as F

def fetch_schema_name(stmt_id, spark_session, schema_name):
    print("fetching schema name for {schema_name}".format(schema_name=schema_name))
    ret_val = None
    try:
        df = spark_session.sql("select param_value from edw_control.param_env where param_nm = '{schema_name}';".format(schema_name=schema_name))
        if df.count() > 0:
            df.show(10, False)
            data = df.collect()
            #print(data)
            ret_val_list = [ row.param_value for row in data ]
            #print(ret_val_list)
            ret_val = ret_val_list[0]
            print("param value for {schema_name} -- {ret_val}".format(schema_name=schema_name, ret_val=ret_val))
        else:
            ret_val = None
    except Exception as e:
        print("ERROR {}".format(str(e)))
        ret_val = None
    return ret_val

def fetch_param_value(stmt_id, spark_session, param_name):
    print("fetching value for {param_name}".format(param_name=param_name))
    ret_val = None
    try:
        query_string="""
        select concat('Select ', column_nm, ' as ', param_nm, ' from ', table_nm, ' ', clause, ';' )
        from edw_control.param_mapping
        where param_nm = '{param_name}';
        """.format(param_name=param_name)
        df = spark_session.sql(query_string)
        if df.count() > 0:
            df.show(10, False)
            data = df.collect()
            q_list = [ row[0] for row in data ]
            q = q_list[0]
            df2 = spark_session.sql(q)
            if df2.count() > 0:
                df2.show(10, False)
                data2 = df2.collect()
                r_list = [ row[0] for row in data2 ]
                ret_val = r_list[0]
                print("param value for {param_name} -- {ret_val}".format(param_name=param_name, ret_val=ret_val))
            else:
                ret_val = None
        else:
            ret_val = None
    except Exception as e:
        print("ERROR {}".format(str(e)))
        ret_val = None
    return ret_val

def execute_sql(stmt_id, spark_session, spark_context, sql_context, query_string):
    print("executing {stmt_id} - {query_string}".format(stmt_id=stmt_id, query_string=query_string))
    ret_val = False
    try:
        spark_session.sql(query_string)
        ret_val = True
    except Exception as e:
        print("ERROR {}".format(str(e)))
        ret_val = False
    return ret_val

def execute():
    spark_session = (SparkSession.builder
        .config("spark.sql.extensions", "io.delta.sql.DeltaSparkSessionExtension")
        .getOrCreate()
    )
    spark_context = spark_session.sparkContext
    sql_context = SQLContext(spark_context)

    PARAM_SCHEMA_ETL_SCHEMA_s = fetch_schema_name("1", spark_session, "ETL_SCHEMA")
    if PARAM_SCHEMA_ETL_SCHEMA_s is None:
        print("ERROR fetching value for parameter 'PARAM_SCHEMA_ETL_SCHEMA_s'")
        sys.exit(1)
    query_to_execute = """USE {PARAM_SCHEMA_ETL_SCHEMA_s};""".format(PARAM_SCHEMA_ETL_SCHEMA_s=PARAM_SCHEMA_ETL_SCHEMA_s)
    ret_val = execute_sql("1", spark_session, spark_context, sql_context, query_to_execute)
    if ret_val is False:
        print("ERROR executing query {query_to_execute}".format(query_to_execute=query_to_execute))
        sys.exit(1)

    query_to_execute = """DELETE FROM STG_FIN_RZ_SO_DOR_LOCAL_CRNCY_ETL;""" 
    ret_val = execute_sql("2", spark_session, spark_context, sql_context, query_to_execute)
    if ret_val is False:
        print("ERROR executing query {query_to_execute}".format(query_to_execute=query_to_execute))
        sys.exit(2)

    #query_to_execute = """INSERT INTO STG_FIN_RZ_SO_DOR_LOCAL_CRNCY_ETL SELECT STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SRC_SYS_KY,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_CRT_DT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.EFF_FRM_GMT_TS,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_LN_ITM_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.BUS_AREA_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.EFF_TO_GMT_TS,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CROSS_BORD_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CONTRA_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.QTA_PROD_LN_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FIN_CLOSE_DT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CUST_REQD_DLVR_DT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLDT_CUST_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.BILT_CUST_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SHPT_CUST_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.END_CUST_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.MGMT_GEO_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_DTL_STAT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_TYPE_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.OM_SRC_SYS_KY,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PROD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SRC_PROD_LN_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_CHNL_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DOC_CRNCY_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.INVN_CLS_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SHIP_QT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_DTL_QT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GRS_EXT_SO_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GRS_EXT_SO_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.NET_EXT_SO_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.NET_EXT_SO_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_ADJ_SO_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_ADJ_SO_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LEG_SO_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LEG_SO_LN_ITM_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FUNC_AREA_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PRFT_CTR_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LEGL_CO_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_MTHD_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SRVC_NOTIF_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_CRT_DT_YR_MTH_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DOC_EXCH_RT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DOC_MTH_3_EXCH_RT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DOC_MTH_12_EXCH_RT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LGCL_DEL_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FIN_RPTBL_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DSTRB_CHNL_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_RSN_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.VALU_DLVR_CHAIN_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ACCT_MGR_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CMRCL_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CUST_APP_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CUST_CNTRCT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CUST_PO_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GOV_CNTRCT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.INDNT_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PRIM_AGNT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PROMO_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SECND_AGNT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SHPT_ISO_CTRY_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_OFF_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_ORG_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_REP_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.BIG_DEAL_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.BUS_TYPE_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PARNT_SO_LN_ITM_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PAYM_TERM_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PLNT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PROJ_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.QTA_CR_SUB_ENT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.REC_EXPLN_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_FRC_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_SUB_ENT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_SLS_QT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SUPLYG_DIV_SUB_ENT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.WBS_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.BASE_UNIT_OF_MSR_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.MATL_SLS_UNIT_OF_MSR_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PARNT_SO_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.NET_CNSTNT_3_MTH_SO_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.NET_CNSTNT_12_MTH_SO_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.REC_EXPLN_PRCS_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PARNT_PROD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.UNRSTD_BUS_AREA_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.TRSY_BUS_ORG_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CONV_TYPE_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CONV_RT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CBN_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORIG_PROD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.TEAM_CD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.QTA_PROD_LN_OVERR_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GL_GRP_ACCT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_EXCH_RT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_MTH_3_EXCH_RT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_MTH_12_EXCH_RT,NVL((STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.NET_EXT_SO_USD_AM * STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_EXCH_RT),0) AS NET_EXT_SO_LC_AM,NVL((STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GRS_EXT_SO_USD_AM * STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_EXCH_RT),0) AS GRS_EXT_SO_LC_AM,NVL((STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_ADJ_SO_USD_AM * STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_EXCH_RT),0) AS ORD_ADJ_SO_LC_AM,NVL((STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_USD_AM * STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_EXCH_RT),0) AS SO_ADJ_LC_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.VOL_DRCT_CUST_NM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.MISC_CHRG_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PROD_OPT_MCC_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_ALLOC_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ACK_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_CMPGN_TX,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DLVR_MTHD_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.EIFFEL_INVN_CLS_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_MKT_PGM_TX,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SRVC_GDS_PROD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SRVC_GDS_QT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.USE_NM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.VALU_VOL_NM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CONSOLIDTD_INV_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DRCT_CUST_IND_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.REBATE_ORD_RSN_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FULLMT_MDL_DN ,CASE WHEN (STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FUNC_AREA_CD = 'A157' ) THEN SO_ADJ_USD_AM ELSE GRS_EXT_SO_USD_AM END AS NET_DEALER_PRC_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PKG_PROD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PRIM_SO_ADJ_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ENGMT_MDL_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_OPT_QT ,CASE WHEN (STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FUNC_AREA_CD = 'A157' ) THEN SO_ADJ_AM ELSE GRS_EXT_SO_AM END AS NET_DEALER_PRC_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.MSTR_CNTRCT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CNTRCT_LN_ITM_NR_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SD_ITM_CATG_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.RTE_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CUST_ACCT_GRP_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.REJ_RSN_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CNTRCT_STRT_DT AS CNTRCT_STRT_DT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CNTRCT_END_DT AS CNTRCT_END_DT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_PREPAYM_TYPE_CD AS SO_PREPAYM_TYPE_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.TOT_NET_EXT_SO_AM AS TOT_NET_EXT_SO_AM FROM STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL  ;""" 
    
    query_to_execute = """INSERT INTO STG_FIN_RZ_SO_DOR_LOCAL_CRNCY_ETL SELECT STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ID AS SO_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_CD AS SO_ADJ_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SRC_SYS_KY AS SRC_SYS_KY,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_LN_ITM_ID AS SO_LN_ITM_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_CRT_DT AS ORD_CRT_DT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.EFF_FRM_GMT_TS AS EFF_FRM_GMT_TS,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DOC_CRNCY_CD AS DOC_CRNCY_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.BUS_AREA_CD AS BUS_AREA_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.EFF_TO_GMT_TS AS EFF_TO_GMT_TS,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CROSS_BORD_FG AS CROSS_BORD_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CONTRA_FG AS CONTRA_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.QTA_PROD_LN_ID AS QTA_PROD_LN_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FIN_CLOSE_DT AS FIN_CLOSE_DT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CUST_REQD_DLVR_DT AS CUST_REQD_DLVR_DT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLDT_CUST_ID AS SLDT_CUST_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.BILT_CUST_ID AS BILT_CUST_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SHPT_CUST_ID AS SHPT_CUST_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.END_CUST_ID AS END_CUST_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.MGMT_GEO_CD AS MGMT_GEO_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_DTL_STAT_CD AS SO_DTL_STAT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_TYPE_CD AS SO_TYPE_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.OM_SRC_SYS_KY AS OM_SRC_SYS_KY,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PROD_ID AS PROD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SRC_PROD_LN_ID AS SRC_PROD_LN_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_CHNL_CD AS SLS_CHNL_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.INVN_CLS_CD AS INVN_CLS_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SHIP_QT AS SHIP_QT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_DTL_QT AS SO_DTL_QT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GRS_EXT_SO_AM AS GRS_EXT_SO_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GRS_EXT_SO_USD_AM AS GRS_EXT_SO_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.NET_EXT_SO_AM AS NET_EXT_SO_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.NET_EXT_SO_USD_AM AS NET_EXT_SO_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_ADJ_SO_AM AS ORD_ADJ_SO_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_ADJ_SO_USD_AM AS ORD_ADJ_SO_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LEG_SO_ID AS LEG_SO_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LEG_SO_LN_ITM_ID AS LEG_SO_LN_ITM_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FUNC_AREA_CD AS FUNC_AREA_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PRFT_CTR_CD AS PRFT_CTR_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LEGL_CO_CD AS LEGL_CO_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_MTHD_CD AS SO_MTHD_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SRVC_NOTIF_ID AS SRVC_NOTIF_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_CRT_DT_YR_MTH_CD AS ORD_CRT_DT_YR_MTH_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DOC_EXCH_RT AS DOC_EXCH_RT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DOC_MTH_3_EXCH_RT AS DOC_MTH_3_EXCH_RT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DOC_MTH_12_EXCH_RT AS DOC_MTH_12_EXCH_RT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LGCL_DEL_FG AS LGCL_DEL_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FIN_RPTBL_FG AS FIN_RPTBL_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DSTRB_CHNL_CD AS DSTRB_CHNL_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_RSN_CD AS ORD_RSN_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.VALU_DLVR_CHAIN_CD AS VALU_DLVR_CHAIN_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ACCT_MGR_ID AS ACCT_MGR_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CMRCL_CD AS CMRCL_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CUST_APP_CD AS CUST_APP_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CUST_CNTRCT_ID AS CUST_CNTRCT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CUST_PO_ID AS CUST_PO_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GOV_CNTRCT_ID AS GOV_CNTRCT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.INDNT_FG AS INDNT_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PRIM_AGNT_ID AS PRIM_AGNT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PROMO_CD AS PROMO_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SECND_AGNT_ID AS SECND_AGNT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SHPT_ISO_CTRY_CD AS SHPT_ISO_CTRY_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_OFF_CD AS SLS_OFF_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_ORG_CD AS SLS_ORG_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_REP_CD AS SLS_REP_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.BIG_DEAL_ID AS BIG_DEAL_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.BUS_TYPE_CD AS BUS_TYPE_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PARNT_SO_LN_ITM_ID AS PARNT_SO_LN_ITM_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PAYM_TERM_CD AS PAYM_TERM_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PLNT_CD AS PLNT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PROJ_ID AS PROJ_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.QTA_CR_SUB_ENT_CD AS QTA_CR_SUB_ENT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.REC_EXPLN_CD AS REC_EXPLN_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_FRC_CD AS SLS_FRC_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SLS_SUB_ENT_CD AS SLS_SUB_ENT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_SLS_QT AS SO_SLS_QT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SUPLYG_DIV_SUB_ENT_CD AS SUPLYG_DIV_SUB_ENT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.WBS_ID AS WBS_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.BASE_UNIT_OF_MSR_CD AS BASE_UNIT_OF_MSR_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.MATL_SLS_UNIT_OF_MSR_CD AS MATL_SLS_UNIT_OF_MSR_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PARNT_SO_ID AS PARNT_SO_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.NET_CNSTNT_3_MTH_SO_USD_AM AS NET_CNSTNT_3_MTH_SO_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.NET_CNSTNT_12_MTH_SO_USD_AM AS NET_CNSTNT_12_MTH_SO_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.REC_EXPLN_PRCS_CD AS REC_EXPLN_PRCS_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PARNT_PROD_ID AS PARNT_PROD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.UNRSTD_BUS_AREA_CD AS UNRSTD_BUS_AREA_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.TRSY_BUS_ORG_CD AS TRSY_BUS_ORG_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CONV_TYPE_ID AS CONV_TYPE_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CONV_RT_CD AS CONV_RT_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CBN_ID AS CBN_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORIG_PROD_ID AS ORIG_PROD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.TEAM_CD_ID AS TEAM_CD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.QTA_PROD_LN_OVERR_FG AS QTA_PROD_LN_OVERR_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_AM AS SO_ADJ_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_USD_AM AS SO_ADJ_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GL_GRP_ACCT_ID AS GL_GRP_ACCT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_CD AS LC_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_EXCH_RT AS LC_EXCH_RT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_MTH_3_EXCH_RT AS LC_MTH_3_EXCH_RT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_MTH_12_EXCH_RT AS LC_MTH_12_EXCH_RT,NVL((STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.NET_EXT_SO_USD_AM * STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_EXCH_RT),0) AS NET_EXT_SO_LC_AM,NVL((STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GRS_EXT_SO_USD_AM * STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_EXCH_RT),0) AS GRS_EXT_SO_LC_AM,NVL((STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ORD_ADJ_SO_USD_AM * STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_EXCH_RT),0) AS ORD_ADJ_SO_LC_AM,NVL((STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_USD_AM * STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.LC_EXCH_RT),0) AS SO_ADJ_LC_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FULLMT_MDL_DN AS FULLMT_MDL_DN,CASE WHEN (STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FUNC_AREA_CD = 'A157') THEN STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_USD_AM ELSE STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GRS_EXT_SO_USD_AM END AS NET_DEALER_PRC_USD_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PRIM_SO_ADJ_CD AS PRIM_SO_ADJ_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.VOL_DRCT_CUST_NM AS VOL_DRCT_CUST_NM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.MISC_CHRG_CD AS MISC_CHRG_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PROD_OPT_MCC_CD AS PROD_OPT_MCC_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_ALLOC_FG AS SO_ADJ_ALLOC_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_OPT_QT AS SO_OPT_QT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ACK_CD AS ACK_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_CMPGN_TX AS SO_CMPGN_TX,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DLVR_MTHD_CD AS DLVR_MTHD_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.EIFFEL_INVN_CLS_CD AS EIFFEL_INVN_CLS_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_MKT_PGM_TX AS SO_MKT_PGM_TX,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.PKG_PROD_ID AS PKG_PROD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SRVC_GDS_PROD_ID AS SRVC_GDS_PROD_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SRVC_GDS_QT AS SRVC_GDS_QT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.USE_NM AS USE_NM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.VALU_VOL_NM AS VALU_VOL_NM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CONSOLIDTD_INV_FG AS CONSOLIDTD_INV_FG,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.DRCT_CUST_IND_CD AS DRCT_CUST_IND_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.ENGMT_MDL_CD AS ENGMT_MDL_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.REBATE_ORD_RSN_CD AS REBATE_ORD_RSN_CD,CASE WHEN (STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.FUNC_AREA_CD = 'A157') THEN STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_ADJ_AM ELSE STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.GRS_EXT_SO_AM END AS NET_DEALER_PRC_AM,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.MSTR_CNTRCT_ID AS MSTR_CNTRCT_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CNTRCT_LN_ITM_NR_ID AS CNTRCT_LN_ITM_NR_ID,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SD_ITM_CATG_CD AS SD_ITM_CATG_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.RTE_CD AS RTE_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CUST_ACCT_GRP_CD AS CUST_ACCT_GRP_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.REJ_RSN_CD AS REJ_RSN_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CNTRCT_STRT_DT AS CNTRCT_STRT_DT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.CNTRCT_END_DT AS CNTRCT_END_DT,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.SO_PREPAYM_TYPE_CD AS SO_PREPAYM_TYPE_CD,STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL.TOT_NET_EXT_SO_AM AS TOT_NET_EXT_SO_AM,NULL AS TOT_NET_EXT_SO_USD_AM FROM STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL STG_FIN_RZ_SO_DOR_LEGL_CO_D_ETL ;""" 
    ret_val = execute_sql("3", spark_session, spark_context, sql_context, query_to_execute)
    if ret_val is False:
        print("ERROR executing query {query_to_execute}".format(query_to_execute=query_to_execute))
        sys.exit(3)


    spark_session.stop()


if __name__ == "__main__":
    # datetime object containing current date and time
    now = datetime.now()
     
    # dd/mm/YY H:M:S
    dt_string = now.strftime("%Y/%m/%d %H:%M:%S")
    file_name =  os.path.basename(sys.argv[0])
    print("{} | {} | starting execution".format(dt_string, file_name))
    
    execute()
    
    dt_string = now.strftime("%Y/%m/%d %H:%M:%S")
    
    print("{} | {} | done".format(dt_string, file_name))

#
# end
#
