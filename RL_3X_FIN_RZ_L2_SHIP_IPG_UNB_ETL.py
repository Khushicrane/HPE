
#
# RL_3X_FIN_RZ_L2_SHIP_IPG_UNB_ETL.py
#

import os
import json
import io
import sys
from datetime import datetime
from pyspark.sql import SparkSession, DataFrame, Row, SQLContext
from pyspark import SparkContext
from pyspark.sql.window import Window
import pyspark.sql.types as T
import pyspark.sql.functions as F

def fetch_schema_name(stmt_id, spark_session, schema_name):
    print("fetching schema name for {schema_name}".format(schema_name=schema_name))
    ret_val = None
    try:
        df = spark_session.sql("select param_value from edw_control.param_env where param_nm = '{schema_name}';".format(schema_name=schema_name))
        if df.count() > 0:
            df.show(10, False)
            data = df.collect()
            #print(data)
            ret_val_list = [ row.param_value for row in data ]
            #print(ret_val_list)
            ret_val = ret_val_list[0]
            print("param value for {schema_name} -- {ret_val}".format(schema_name=schema_name, ret_val=ret_val))
        else:
            ret_val = None
    except Exception as e:
        print("ERROR {}".format(str(e)))
        ret_val = None
    return ret_val

def fetch_param_value(stmt_id, spark_session, param_name):
    print("fetching value for {param_name}".format(param_name=param_name))
    ret_val = None
    try:
        query_string="""
        select concat('Select ', column_nm, ' as ', param_nm, ' from ', table_nm, ' ', clause, ';' )
        from edw_control.param_mapping
        where param_nm = '{param_name}';
        """.format(param_name=param_name)
        df = spark_session.sql(query_string)
        if df.count() > 0:
            df.show(10, False)
            data = df.collect()
            q_list = [ row[0] for row in data ]
            q = q_list[0]
            df2 = spark_session.sql(q)
            if df2.count() > 0:
                df2.show(10, False)
                data2 = df2.collect()
                r_list = [ row[0] for row in data2 ]
                ret_val = r_list[0]
                print("param value for {param_name} -- {ret_val}".format(param_name=param_name, ret_val=ret_val))
            else:
                ret_val = None
        else:
            ret_val = None
    except Exception as e:
        print("ERROR {}".format(str(e)))
        ret_val = None
    return ret_val

def execute_sql(stmt_id, spark_session, spark_context, sql_context, query_string):
    print("executing {stmt_id} - {query_string}".format(stmt_id=stmt_id, query_string=query_string))
    ret_val = False
    try:
        spark_session.sql(query_string)
        ret_val = True
    except Exception as e:
        print("ERROR {}".format(str(e)))
        ret_val = False
    return ret_val

def execute():
    spark_session = (SparkSession.builder
        .config("spark.sql.extensions", "io.delta.sql.DeltaSparkSessionExtension")
        .getOrCreate()
    )
    spark_context = spark_session.sparkContext
    sql_context = SQLContext(spark_context)

    PARAM_SCHEMA_ETL_SCHEMA_s = fetch_schema_name("1", spark_session, "ETL_SCHEMA")
    if PARAM_SCHEMA_ETL_SCHEMA_s is None:
        print("ERROR fetching value for parameter 'PARAM_SCHEMA_ETL_SCHEMA_s'")
        sys.exit(1)
    query_to_execute = """USE {PARAM_SCHEMA_ETL_SCHEMA_s};""".format(PARAM_SCHEMA_ETL_SCHEMA_s=PARAM_SCHEMA_ETL_SCHEMA_s)
    ret_val = execute_sql("1", spark_session, spark_context, sql_context, query_to_execute)
    if ret_val is False:
        print("ERROR executing query {query_to_execute}".format(query_to_execute=query_to_execute))
        sys.exit(1)

    query_to_execute = """DELETE FROM STG_FIN_RZ_SHIP_IPG_UNB_L2_ETL;""" 
    ret_val = execute_sql("2", spark_session, spark_context, sql_context, query_to_execute)
    if ret_val is False:
        print("ERROR executing query {query_to_execute}".format(query_to_execute=query_to_execute))
        sys.exit(2)

    PARAM_BATCH_ID_s = fetch_param_value("4", spark_session, "PARAM_BATCH_ID_s")
    if PARAM_BATCH_ID_s is None:
        print("ERROR fetching value for parameter 'PARAM_BATCH_ID_s'")
        sys.exit(3)
    PARAM_BATCH_GMT_START_TS_s = fetch_param_value("4", spark_session, "PARAM_BATCH_GMT_START_TS_s")
    if PARAM_BATCH_GMT_START_TS_s is None:
        print("ERROR fetching value for parameter 'PARAM_BATCH_GMT_START_TS_s'")
        sys.exit(3)
    #query_to_execute = """INSERT INTO STG_FIN_RZ_SHIP_IPG_UNB_L2_ETL SELECT S1.SHIP_ID,S1.SRC_SYS_KY,S1.SHIP_LN_ITM_ID,S1.SO_ADJ_CD,S1.SHIP_DT,S1.EFF_FRM_GMT_TS,CASE WHEN (NVL(S2.SLS_PROD_ID,'?') = '?') THEN S1.REC_EXPLN_CD WHEN (S1.SRC_SYS_KY in (27,2027,6027,8027,6868,8868) AND S1.REC_EXPLN_CD = 'C') THEN 'C' ELSE 'P' END AS REC_EXPLN_CD,S1.PROD_ID,S1.CONTRA_FG,S1.BUS_AREA_CD,S1.SLDT_CUST_ID,S1.SHPT_CUST_ID,S1.BILT_CUST_ID,S1.END_CUST_ID,S1.MGMT_GEO_CD,S1.SO_TYPE_CD,S1.OM_SRC_SYS_KY,S1.FIN_CLOSE_DT,S1.SRC_PROD_LN_ID,S1.FUNC_AREA_CD,S1.PRFT_CTR_CD,S1.CROSS_BORD_FG,S1.SO_ID,S1.SO_LN_ITM_ID,S1.CBN_ID,S1.SLS_CHNL_CD,S1.DOC_CRNCY_CD,S1.QTA_PROD_LN_ID,S1.EFF_TO_GMT_TS,S1.ORD_CRT_DT,S1.CUST_REQD_DLVR_DT,S1.INVN_CLS_CD,S1.QTA_PROD_LN_OVERR_FG,S1.SLS_ORG_CD,S1.SHIP_FRM_PLNT_CD,S1.PARNT_SO_LN_ITM_ID,S1.LEGL_CO_CD,S1.SO_MTHD_CD,S1.LEG_SO_ID,S1.LEG_SO_LN_ITM_ID,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_QT END AS SHIP_QT,S1.UNIT_PRC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.GRS_EXT_SHIP_AM END AS GRS_EXT_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.GRS_EXT_SHIP_USD_AM END AS GRS_EXT_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.ORD_ADJ_SHIP_AM END AS ORD_ADJ_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.ORD_ADJ_SHIP_USD_AM END AS ORD_ADJ_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_EXT_SHIP_AM END AS NET_EXT_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_EXT_SHIP_USD_AM END AS NET_EXT_SHIP_USD_AM,TO_TIMESTAMP('{PARAM_BATCH_GMT_START_TS_s}') AS INS_GMT_TS,TO_TIMESTAMP('{PARAM_BATCH_GMT_START_TS_s}') AS UPD_GMT_TS,0 AS REC_ST_NR,{PARAM_BATCH_ID_s} AS LOAD_JOB_NR,S1.LGCL_DEL_FG,S1.DSTRB_CHNL_CD,S1.ORD_RSN_CD,S1.VALU_DLVR_CHAIN_CD,S1.ACCT_MGR_ID,S1.BASE_UNIT_OF_MSR_CD,S1.BIG_DEAL_ID,S1.BUS_TYPE_CD,S1.CMRCL_CD,S1.CUST_APP_CD,S1.CUST_CNTRCT_ID,S1.CUST_PO_ID,S1.DLVR_MTHD_CD,S1.GOV_CNTRCT_ID,S1.INDNT_FG,S1.LC_CD,S1.MATL_SLS_UNIT_OF_MSR_CD,S1.ORIG_PROD_ID,S1.PAYM_TERM_CD,S1.PRIM_AGNT_ID,S1.PROJ_ID,S1.PROMO_CD,S1.SECND_AGNT_ID,S1.SHPT_ISO_CTRY_CD,S1.SLS_FRC_CD,S1.SLS_OFF_CD,S1.SLS_REP_CD,S1.SLS_SUB_ENT_CD,S1.SRVC_NOTIF_ID,S1.SUPLYG_DIV_SUB_ENT_CD,S1.WBS_ID,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_ADJ_AM END AS SHIP_ADJ_AM,S1.TEAM_CD_ID,S1.FRST_TCHPT_ACTL_SHIP_TS,S1.LAST_TCHPT_ACTL_SHIP_TS,S1.SHIP_POST_TS,S1.QTA_CR_SUB_ENT_CD,S1.GL_GRP_ACCT_ID,S1.DOC_EXCH_RT,S1.DOC_MTH_3_EXCH_RT,S1.DOC_MTH_12_EXCH_RT,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_ADJ_USD_AM END AS SHIP_ADJ_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_CNSTNT_3_MTH_SHIP_USD_AM END AS NET_CNSTNT_3_MTH_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_CNSTNT_12_MTH_SHIP_USD_AM END AS NET_CNSTNT_12_MTH_SHIP_USD_AM,S1.CONV_TYPE_ID,S1.CONV_RT_CD,S1.TRSY_BUS_ORG_CD,S1.ORD_CRT_DT_YR_MTH_CD,S1.UNRSTD_BUS_AREA_CD,S1.PARNT_SO_ID,CASE nvl(S2.SLS_PROD_ID,'?') WHEN ('?') THEN S1.REC_EXPLN_PRCS_CD ELSE 'I' END AS REC_EXPLN_PRCS_CD,S1.PARNT_PROD_ID,S1.FDW_TRD_INTRA_CO_FG,S1.LC_EXCH_RT,S1.LC_MTH_3_EXCH_RT,S1.LC_MTH_12_EXCH_RT,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_EXT_SHIP_LC_AM END AS NET_EXT_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.GRS_EXT_SHIP_LC_AM END AS GRS_EXT_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.ORD_ADJ_SHIP_LC_AM END AS ORD_ADJ_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_ADJ_LC_AM END AS SHIP_ADJ_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_EXT_QT END AS SHIP_EXT_QT,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_UNIT_QT END AS SHIP_UNIT_QT,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_SLS_QT END AS SHIP_SLS_QT,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_NET_EXT_SHIP_AM END AS SO_DTL_NET_EXT_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_GRS_EXT_SHIP_AM END AS SO_DTL_GRS_EXT_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_ORD_ADJ_SHIP_AM END AS SO_DTL_ORD_ADJ_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_NET_EXT_SHIP_USD_AM END AS SO_DTL_NET_EXT_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_GRS_EXT_SHIP_USD_AM END AS SO_DTL_GRS_EXT_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_ORD_ADJ_SHIP_USD_AM END AS SO_DTL_ORD_ADJ_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_NET_CNSTNT_3_MTH_SHIP_USD_AM END AS SO_DTL_NET_CNSTNT_3_MTH_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_NET_CNSTNT_12_MTH_SHIP_USD_AM END AS SO_DTL_NET_CNSTNT_12_MTH_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_NET_EXT_SHIP_LC_AM END AS SO_DTL_NET_EXT_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_GRS_EXT_SHIP_LC_AM END AS SO_DTL_GRS_EXT_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_ORD_ADJ_SHIP_LC_AM END AS SO_DTL_ORD_ADJ_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_DEALER_PRC_USD_AM END AS NET_DEALER_PRC_USD_AM,S1.PRIM_SO_ADJ_CD,S1.BILL_DOC_DT,S1.BILL_DUE_DT,S1.BILL_DOC_ID,S1.MISC_CHRG_CD,S1.PROD_OPT_MCC_CD,S1.SO_ADJ_ALLOC_FG,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_OPT_QT END AS SHIP_OPT_QT,S1.ACK_CD,S1.SO_CMPGN_TX,S1.EIFFEL_INVN_CLS_CD,S1.SO_MKT_PGM_TX,S1.PKG_PROD_ID,S1.SRVC_GDS_PROD_ID,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SRVC_GDS_QT END AS SRVC_GDS_QT,S1.USE_NM,S1.VALU_VOL_NM,S1.CONSOLIDTD_INV_FG,S1.DRCT_CUST_IND_CD,S1.ENGMT_MDL_CD,S1.REBATE_ORD_RSN_CD,S1.SD_ITM_CATG_CD FROM STG_FIN_RZ_SHIP_DTL_MDL_UNIT_SKU_QT_ETL S1 INNER JOIN SRC_SYS_D ON S1.SRC_SYS_KY = SRC_SYS_D.SRC_SYS_KY LEFT JOIN (SELECT sls_prod_id, SPRN_CO_ID FROM STG_FIN_RZ_SO_SLS_PROD_BASE_PROD_B_D_ETL GROUP BY sls_prod_id,SPRN_CO_ID) S2 ON s1.ORIG_PROD_ID = S2.SLS_PROD_ID AND SRC_SYS_D.ROLLUP_DFLT_CO_ID = S2.SPRN_CO_ID WHERE NOT (S1.SRC_SYS_KY in (27,2027,6027,8027,6868,8868) AND S1.REC_EXPLN_CD = 'P' AND S2.SLS_PROD_ID IS NOT NULL) ;""".format(PARAM_BATCH_ID_s=PARAM_BATCH_ID_s, PARAM_BATCH_GMT_START_TS_s=PARAM_BATCH_GMT_START_TS_s)
    
    query_to_execute = """INSERT INTO STG_FIN_RZ_SHIP_IPG_UNB_L2_ETL SELECT S1.SHIP_ID,S1.SRC_SYS_KY,S1.SHIP_LN_ITM_ID,S1.SO_ADJ_CD,S1.SHIP_DT,S1.EFF_FRM_GMT_TS,CASE WHEN (NVL(S2.SLS_PROD_ID,'?') = '?') THEN S1.REC_EXPLN_CD WHEN (S1.SRC_SYS_KY in (27,2027,6027,8027,6868,8868) AND S1.REC_EXPLN_CD = 'C') THEN 'C' ELSE 'P' END AS REC_EXPLN_CD,S1.PROD_ID,S1.CONTRA_FG,S1.BUS_AREA_CD,S1.SLDT_CUST_ID,S1.SHPT_CUST_ID,S1.BILT_CUST_ID,S1.END_CUST_ID,S1.MGMT_GEO_CD,S1.SO_TYPE_CD,S1.OM_SRC_SYS_KY,S1.FIN_CLOSE_DT,S1.SRC_PROD_LN_ID,S1.FUNC_AREA_CD,S1.PRFT_CTR_CD,S1.CROSS_BORD_FG,S1.SO_ID,S1.SO_LN_ITM_ID,S1.CBN_ID,S1.SLS_CHNL_CD,S1.DOC_CRNCY_CD,S1.QTA_PROD_LN_ID,S1.EFF_TO_GMT_TS,S1.ORD_CRT_DT,S1.CUST_REQD_DLVR_DT,S1.INVN_CLS_CD,S1.QTA_PROD_LN_OVERR_FG,S1.SLS_ORG_CD,S1.SHIP_FRM_PLNT_CD,S1.PARNT_SO_LN_ITM_ID,S1.LEGL_CO_CD,S1.SO_MTHD_CD,S1.LEG_SO_ID,S1.LEG_SO_LN_ITM_ID,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_QT END AS SHIP_QT,S1.UNIT_PRC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.GRS_EXT_SHIP_AM END AS GRS_EXT_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.GRS_EXT_SHIP_USD_AM END AS GRS_EXT_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.ORD_ADJ_SHIP_AM END AS ORD_ADJ_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.ORD_ADJ_SHIP_USD_AM END AS ORD_ADJ_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_EXT_SHIP_AM END AS NET_EXT_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_EXT_SHIP_USD_AM END AS NET_EXT_SHIP_USD_AM,TO_TIMESTAMP('{PARAM_BATCH_GMT_START_TS_s}') AS INS_GMT_TS,TO_TIMESTAMP('{PARAM_BATCH_GMT_START_TS_s}') AS UPD_GMT_TS,0 AS REC_ST_NR,{PARAM_BATCH_ID_s} AS LOAD_JOB_NR,S1.LGCL_DEL_FG,S1.DSTRB_CHNL_CD,S1.ORD_RSN_CD,S1.VALU_DLVR_CHAIN_CD,S1.ACCT_MGR_ID,S1.BASE_UNIT_OF_MSR_CD,S1.BIG_DEAL_ID,S1.BUS_TYPE_CD,S1.CMRCL_CD,S1.CUST_APP_CD,S1.CUST_CNTRCT_ID,S1.CUST_PO_ID,S1.DLVR_MTHD_CD,S1.GOV_CNTRCT_ID,S1.INDNT_FG,S1.LC_CD,S1.MATL_SLS_UNIT_OF_MSR_CD,S1.ORIG_PROD_ID,S1.PAYM_TERM_CD,S1.PRIM_AGNT_ID,S1.PROJ_ID,S1.PROMO_CD,S1.SECND_AGNT_ID,S1.SHPT_ISO_CTRY_CD,S1.SLS_FRC_CD,S1.SLS_OFF_CD,S1.SLS_REP_CD,S1.SLS_SUB_ENT_CD,S1.SRVC_NOTIF_ID,S1.SUPLYG_DIV_SUB_ENT_CD,S1.WBS_ID,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_ADJ_AM END AS SHIP_ADJ_AM,S1.TEAM_CD_ID,S1.FRST_TCHPT_ACTL_SHIP_TS,S1.LAST_TCHPT_ACTL_SHIP_TS,S1.SHIP_POST_TS,S1.QTA_CR_SUB_ENT_CD,S1.GL_GRP_ACCT_ID,S1.DOC_EXCH_RT,S1.DOC_MTH_3_EXCH_RT,S1.DOC_MTH_12_EXCH_RT,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_ADJ_USD_AM END AS SHIP_ADJ_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_CNSTNT_3_MTH_SHIP_USD_AM END AS NET_CNSTNT_3_MTH_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_CNSTNT_12_MTH_SHIP_USD_AM END AS NET_CNSTNT_12_MTH_SHIP_USD_AM,S1.CONV_TYPE_ID,S1.CONV_RT_CD,S1.TRSY_BUS_ORG_CD,S1.ORD_CRT_DT_YR_MTH_CD,S1.UNRSTD_BUS_AREA_CD,S1.PARNT_SO_ID,CASE nvl(S2.SLS_PROD_ID,'?') WHEN ('?') THEN S1.REC_EXPLN_PRCS_CD ELSE 'I' END AS REC_EXPLN_PRCS_CD,S1.PARNT_PROD_ID,S1.FDW_TRD_INTRA_CO_FG,S1.LC_EXCH_RT,S1.LC_MTH_3_EXCH_RT,S1.LC_MTH_12_EXCH_RT,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_EXT_SHIP_LC_AM END AS NET_EXT_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.GRS_EXT_SHIP_LC_AM END AS GRS_EXT_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.ORD_ADJ_SHIP_LC_AM END AS ORD_ADJ_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_ADJ_LC_AM END AS SHIP_ADJ_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_EXT_QT END AS SHIP_EXT_QT,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_UNIT_QT END AS SHIP_UNIT_QT,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_SLS_QT END AS SHIP_SLS_QT,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_NET_EXT_SHIP_AM END AS SO_DTL_NET_EXT_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_GRS_EXT_SHIP_AM END AS SO_DTL_GRS_EXT_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_ORD_ADJ_SHIP_AM END AS SO_DTL_ORD_ADJ_SHIP_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_NET_EXT_SHIP_USD_AM END AS SO_DTL_NET_EXT_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_GRS_EXT_SHIP_USD_AM END AS SO_DTL_GRS_EXT_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_ORD_ADJ_SHIP_USD_AM END AS SO_DTL_ORD_ADJ_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_NET_CNSTNT_3_MTH_SHIP_USD_AM END AS SO_DTL_NET_CNSTNT_3_MTH_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_NET_CNSTNT_12_MTH_SHIP_USD_AM END AS SO_DTL_NET_CNSTNT_12_MTH_SHIP_USD_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_NET_EXT_SHIP_LC_AM END AS SO_DTL_NET_EXT_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_GRS_EXT_SHIP_LC_AM END AS SO_DTL_GRS_EXT_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SO_DTL_ORD_ADJ_SHIP_LC_AM END AS SO_DTL_ORD_ADJ_SHIP_LC_AM,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.NET_DEALER_PRC_USD_AM END AS NET_DEALER_PRC_USD_AM,S1.PRIM_SO_ADJ_CD,S1.BILL_DOC_DT,S1.BILL_DUE_DT,S1.BILL_DOC_ID,S1.MISC_CHRG_CD,S1.PROD_OPT_MCC_CD,S1.SO_ADJ_ALLOC_FG,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SHIP_OPT_QT END AS SHIP_OPT_QT,S1.ACK_CD,S1.SO_CMPGN_TX,S1.EIFFEL_INVN_CLS_CD,S1.SO_MKT_PGM_TX,S1.PKG_PROD_ID,S1.SRVC_GDS_PROD_ID,CASE WHEN (S1.REC_EXPLN_CD = 'C' AND S2.SLS_PROD_ID IS NOT NULL) THEN 0 ELSE S1.SRVC_GDS_QT END AS SRVC_GDS_QT,S1.USE_NM,S1.VALU_VOL_NM,S1.CONSOLIDTD_INV_FG,S1.DRCT_CUST_IND_CD,S1.ENGMT_MDL_CD,S1.REBATE_ORD_RSN_CD,S1.SD_ITM_CATG_CD FROM STG_FIN_RZ_SHIP_DTL_MDL_UNIT_SKU_QT_ETL S1 INNER JOIN SRC_SYS_D ON S1.SRC_SYS_KY = SRC_SYS_D.SRC_SYS_KY LEFT JOIN (SELECT sls_prod_id, SPRN_CO_ID FROM STG_FIN_RZ_SO_SLS_PROD_BASE_PROD_B_D_ETL GROUP BY sls_prod_id,SPRN_CO_ID) S2 ON s1.ORIG_PROD_ID = S2.SLS_PROD_ID AND SRC_SYS_D.ROLLUP_DFLT_CO_ID = S2.SPRN_CO_ID WHERE NOT (S1.SRC_SYS_KY in (27,2027,6027,8027,6868,8868) AND S1.REC_EXPLN_CD = 'P' AND S2.SLS_PROD_ID IS NOT NULL) ;""".format(PARAM_BATCH_ID_s=PARAM_BATCH_ID_s, PARAM_BATCH_GMT_START_TS_s=PARAM_BATCH_GMT_START_TS_s)
    ret_val = execute_sql("3", spark_session, spark_context, sql_context, query_to_execute)
    if ret_val is False:
        print("ERROR executing query {query_to_execute}".format(query_to_execute=query_to_execute))
        sys.exit(3)

    PARAM_BATCH_ID_s = fetch_param_value("5", spark_session, "PARAM_BATCH_ID_s")
    if PARAM_BATCH_ID_s is None:
        print("ERROR fetching value for parameter 'PARAM_BATCH_ID_s'")
        sys.exit(4)
    PARAM_BATCH_GMT_START_TS_s = fetch_param_value("5", spark_session, "PARAM_BATCH_GMT_START_TS_s")
    if PARAM_BATCH_GMT_START_TS_s is None:
        print("ERROR fetching value for parameter 'PARAM_BATCH_GMT_START_TS_s'")
        sys.exit(4)
    query_to_execute = """INSERT INTO STG_FIN_RZ_SHIP_IPG_UNB_L2_ETL SELECT SOURCE1.SHIP_ID,SOURCE1.SRC_SYS_KY,SOURCE1.SHIP_LN_ITM_ID,SOURCE1.SO_ADJ_CD,SOURCE1.SHIP_DT,SOURCE1.EFF_FRM_GMT_TS,SOURCE1.REC_EXPLN_CD,SOURCE1.PROD_ID,SOURCE1.CONTRA_FG,SOURCE1.BUS_AREA_CD,SOURCE1.SLDT_CUST_ID,SOURCE1.SHPT_CUST_ID,SOURCE1.BILT_CUST_ID,SOURCE1.END_CUST_ID,SOURCE1.MGMT_GEO_CD,SOURCE1.SO_TYPE_CD,SOURCE1.OM_SRC_SYS_KY,SOURCE1.FIN_CLOSE_DT,SOURCE1.SRC_PROD_LN_ID,SOURCE1.FUNC_AREA_CD,SOURCE1.PRFT_CTR_CD,SOURCE1.CROSS_BORD_FG,SOURCE1.SO_ID,SOURCE1.SO_LN_ITM_ID,SOURCE1.CBN_ID,SOURCE1.SLS_CHNL_CD,SOURCE1.DOC_CRNCY_CD,SOURCE1.QTA_PROD_LN_ID,SOURCE1.EFF_TO_GMT_TS,SOURCE1.ORD_CRT_DT,SOURCE1.CUST_REQD_DLVR_DT,SOURCE1.INVN_CLS_CD,SOURCE1.QTA_PROD_LN_OVERR_FG,SOURCE1.SLS_ORG_CD,SOURCE1.SHIP_FRM_PLNT_CD,SOURCE1.PARNT_SO_LN_ITM_ID,SOURCE1.LEGL_CO_CD,SOURCE1.SO_MTHD_CD,SOURCE1.LEG_SO_ID,SOURCE1.LEG_SO_LN_ITM_ID,SOURCE2.SHIP_QT,SOURCE2.UNIT_PRC_AM,SOURCE2.GRS_EXT_SHIP_AM,SOURCE2.GRS_EXT_SHIP_USD_AM,SOURCE2.ORD_ADJ_SHIP_AM,SOURCE2.ORD_ADJ_SHIP_USD_AM,SOURCE2.NET_EXT_SHIP_AM,SOURCE2.NET_EXT_SHIP_USD_AM,SOURCE1.INS_GMT_TS,SOURCE1.UPD_GMT_TS,SOURCE1.REC_ST_NR,SOURCE1.LOAD_JOB_NR,SOURCE1.LGCL_DEL_FG,SOURCE1.DSTRB_CHNL_CD,SOURCE1.ORD_RSN_CD,SOURCE1.VALU_DLVR_CHAIN_CD,SOURCE1.ACCT_MGR_ID,SOURCE1.BASE_UNIT_OF_MSR_CD,SOURCE1.BIG_DEAL_ID,SOURCE1.BUS_TYPE_CD,SOURCE1.CMRCL_CD,SOURCE1.CUST_APP_CD,SOURCE1.CUST_CNTRCT_ID,SOURCE1.CUST_PO_ID,SOURCE1.DLVR_MTHD_CD,SOURCE1.GOV_CNTRCT_ID,SOURCE1.INDNT_FG,SOURCE1.LC_CD,SOURCE1.MATL_SLS_UNIT_OF_MSR_CD,SOURCE1.ORIG_PROD_ID,SOURCE1.PAYM_TERM_CD,SOURCE1.PRIM_AGNT_ID,SOURCE1.PROJ_ID,SOURCE1.PROMO_CD,SOURCE1.SECND_AGNT_ID,SOURCE1.SHPT_ISO_CTRY_CD,SOURCE1.SLS_FRC_CD,SOURCE1.SLS_OFF_CD,SOURCE1.SLS_REP_CD,SOURCE1.SLS_SUB_ENT_CD,SOURCE1.SRVC_NOTIF_ID,SOURCE1.SUPLYG_DIV_SUB_ENT_CD,SOURCE1.WBS_ID,SOURCE2.SHIP_ADJ_AM,SOURCE1.TEAM_CD_ID,SOURCE1.FRST_TCHPT_ACTL_SHIP_TS,SOURCE1.LAST_TCHPT_ACTL_SHIP_TS,SOURCE1.SHIP_POST_TS,SOURCE1.QTA_CR_SUB_ENT_CD,SOURCE1.GL_GRP_ACCT_ID,SOURCE1.DOC_EXCH_RT,SOURCE1.DOC_MTH_3_EXCH_RT,SOURCE1.DOC_MTH_12_EXCH_RT,SOURCE2.SHIP_ADJ_USD_AM,SOURCE2.NET_CNSTNT_3_MTH_SHIP_USD_AM,SOURCE2.NET_CNSTNT_12_MTH_SHIP_USD_AM,SOURCE1.CONV_TYPE_ID,SOURCE1.CONV_RT_CD,SOURCE1.TRSY_BUS_ORG_CD,SOURCE1.ORD_CRT_DT_YR_MTH_CD,SOURCE1.UNRSTD_BUS_AREA_CD,SOURCE1.PARNT_SO_ID,SOURCE1.REC_EXPLN_PRCS_CD,SOURCE1.PARNT_PROD_ID,SOURCE1.FDW_TRD_INTRA_CO_FG,SOURCE1.LC_EXCH_RT,SOURCE1.LC_MTH_3_EXCH_RT,SOURCE1.LC_MTH_12_EXCH_RT,SOURCE2.NET_EXT_SHIP_LC_AM,SOURCE2.GRS_EXT_SHIP_LC_AM,SOURCE2.ORD_ADJ_SHIP_LC_AM,SOURCE2.SHIP_ADJ_LC_AM,SOURCE2.SHIP_EXT_QT,SOURCE2.SHIP_UNIT_QT,SOURCE1.SHIP_SLS_QT,SOURCE2.SO_DTL_NET_EXT_SHIP_AM,SOURCE2.SO_DTL_GRS_EXT_SHIP_AM,SOURCE2.SO_DTL_ORD_ADJ_SHIP_AM,SOURCE2.SO_DTL_NET_EXT_SHIP_USD_AM,SOURCE2.SO_DTL_GRS_EXT_SHIP_USD_AM,SOURCE2.SO_DTL_ORD_ADJ_SHIP_USD_AM,SOURCE2.SO_DTL_NET_CNSTNT_3_MTH_SHIP_USD_AM,SOURCE2.SO_DTL_NET_CNSTNT_12_MTH_SHIP_USD_AM,SOURCE2.SO_DTL_NET_EXT_SHIP_LC_AM,SOURCE2.SO_DTL_GRS_EXT_SHIP_LC_AM,SOURCE2.SO_DTL_ORD_ADJ_SHIP_LC_AM,SOURCE2.NET_DEALER_PRC_USD_AM,SOURCE1.PRIM_SO_ADJ_CD,SOURCE1.BILL_DOC_DT,SOURCE1.BILL_DUE_DT,SOURCE1.BILL_DOC_ID,SOURCE1.MISC_CHRG_CD,SOURCE1.PROD_OPT_MCC_CD,SOURCE1.SO_ADJ_ALLOC_FG,SOURCE2.SHIP_OPT_QT,SOURCE1.ACK_CD,SOURCE1.SO_CMPGN_TX,SOURCE1.EIFFEL_INVN_CLS_CD,SOURCE1.SO_MKT_PGM_TX,SOURCE1.PKG_PROD_ID,SOURCE1.SRVC_GDS_PROD_ID,SOURCE2.SRVC_GDS_QT,SOURCE1.USE_NM,SOURCE1.VALU_VOL_NM,SOURCE1.CONSOLIDTD_INV_FG,SOURCE1.DRCT_CUST_IND_CD,SOURCE1.ENGMT_MDL_CD,SOURCE1.REBATE_ORD_RSN_CD,SOURCE1.SD_ITM_CATG_CD FROM (SELECT S1.SHIP_ID,S1.SHIP_LN_ITM_ID,S1.SHIP_DT,S1.EFF_FRM_GMT_TS,S1.SRC_SYS_KY,S1.SO_ADJ_CD,'C' AS REC_EXPLN_CD,S2.BASE_PROD_ID AS PROD_ID,0 AS SHIP_SLS_QT,SUM(S1.SHIP_QT * (S2.BASE_PROD_PER_SALE_PROD_QT)) AS SHIP_QT,SUM(S1.UNIT_PRC_AM * (S2.BASE_PROD_AM_PC)) AS UNIT_PRC_AM,SUM(S1.GRS_EXT_SHIP_AM * (S2.BASE_PROD_AM_PC)) AS GRS_EXT_SHIP_AM,SUM(S1.GRS_EXT_SHIP_USD_AM * (S2.BASE_PROD_AM_PC)) AS GRS_EXT_SHIP_USD_AM,SUM(S1.ORD_ADJ_SHIP_AM * (S2.BASE_PROD_AM_PC)) AS ORD_ADJ_SHIP_AM,SUM(S1.ORD_ADJ_SHIP_USD_AM * (S2.BASE_PROD_AM_PC)) AS ORD_ADJ_SHIP_USD_AM,SUM(S1.NET_EXT_SHIP_AM * (S2.BASE_PROD_AM_PC)) AS NET_EXT_SHIP_AM,SUM(S1.NET_EXT_SHIP_USD_AM * (S2.BASE_PROD_AM_PC)) AS NET_EXT_SHIP_USD_AM,SUM(S1.SHIP_ADJ_AM * (S2.BASE_PROD_AM_PC)) AS SHIP_ADJ_AM,SUM(S1.SHIP_ADJ_USD_AM * (S2.BASE_PROD_AM_PC)) AS SHIP_ADJ_USD_AM,SUM(S1.NET_CNSTNT_3_MTH_SHIP_USD_AM * (S2.BASE_PROD_AM_PC)) AS NET_CNSTNT_3_MTH_SHIP_USD_AM,SUM(S1.NET_CNSTNT_12_MTH_SHIP_USD_AM * (S2.BASE_PROD_AM_PC)) AS NET_CNSTNT_12_MTH_SHIP_USD_AM,SUM(S1.NET_EXT_SHIP_LC_AM * (S2.BASE_PROD_AM_PC)) AS NET_EXT_SHIP_LC_AM,SUM(S1.GRS_EXT_SHIP_LC_AM * (S2.BASE_PROD_AM_PC)) AS GRS_EXT_SHIP_LC_AM,SUM(S1.ORD_ADJ_SHIP_LC_AM * (S2.BASE_PROD_AM_PC)) AS ORD_ADJ_SHIP_LC_AM,SUM(S1.SHIP_ADJ_LC_AM * (S2.BASE_PROD_AM_PC)) AS SHIP_ADJ_LC_AM,SUM(CASE WHEN ((S3.MDL_UNITS_PER_SKU_QT > 1)) THEN NVL(S1.SHIP_QT * S3.MDL_UNITS_PER_SKU_QT * S2.BASE_PROD_PER_SALE_PROD_QT,S1.SHIP_QT * S2.BASE_PROD_PER_SALE_PROD_QT) ELSE S1.SHIP_QT * S2.BASE_PROD_PER_SALE_PROD_QT END) AS SHIP_EXT_QT,SUM(CASE WHEN ((S3.MDL_UNITS_PER_SKU_QT > 1) AND (S3.PROD_TYPE_ID = 'UN' OR S3.RECOND_TYPE_CD = 'Recon Unit')) THEN NVL(S1.SHIP_QT * S3.MDL_UNITS_PER_SKU_QT * S2.BASE_PROD_PER_SALE_PROD_QT,S1.SHIP_QT * S2.BASE_PROD_PER_SALE_PROD_QT) WHEN ((S3.PROD_TYPE_ID = 'UN' OR S3.RECOND_TYPE_CD = 'Recon Unit')) THEN S1.SHIP_QT * S2.BASE_PROD_PER_SALE_PROD_QT ELSE 0 END) AS SHIP_UNIT_QT,SUM(SO_DTL_NET_EXT_SHIP_AM * (S2.BASE_PROD_AM_PC)) AS SO_DTL_NET_EXT_SHIP_AM,SUM(SO_DTL_GRS_EXT_SHIP_AM * (S2.BASE_PROD_AM_PC)) AS SO_DTL_GRS_EXT_SHIP_AM,SUM(SO_DTL_ORD_ADJ_SHIP_AM * (S2.BASE_PROD_AM_PC)) AS SO_DTL_ORD_ADJ_SHIP_AM,SUM(SO_DTL_GRS_EXT_SHIP_USD_AM * (S2.BASE_PROD_AM_PC)) AS SO_DTL_GRS_EXT_SHIP_USD_AM,SUM(SO_DTL_ORD_ADJ_SHIP_USD_AM * (S2.BASE_PROD_AM_PC)) AS SO_DTL_ORD_ADJ_SHIP_USD_AM,SUM(SO_DTL_NET_EXT_SHIP_USD_AM * (S2.BASE_PROD_AM_PC)) AS SO_DTL_NET_EXT_SHIP_USD_AM,SUM(SO_DTL_NET_CNSTNT_3_MTH_SHIP_USD_AM * (S2.BASE_PROD_AM_PC)) AS SO_DTL_NET_CNSTNT_3_MTH_SHIP_USD_AM,SUM(SO_DTL_NET_CNSTNT_12_MTH_SHIP_USD_AM * (S2.BASE_PROD_AM_PC)) AS SO_DTL_NET_CNSTNT_12_MTH_SHIP_USD_AM,SUM(SO_DTL_NET_EXT_SHIP_LC_AM * (S2.BASE_PROD_AM_PC)) AS SO_DTL_NET_EXT_SHIP_LC_AM,SUM(SO_DTL_GRS_EXT_SHIP_LC_AM * (S2.BASE_PROD_AM_PC)) AS SO_DTL_GRS_EXT_SHIP_LC_AM,SUM(SO_DTL_ORD_ADJ_SHIP_LC_AM * (S2.BASE_PROD_AM_PC)) AS SO_DTL_ORD_ADJ_SHIP_LC_AM,SUM(S1.SRVC_GDS_QT * (S2.BASE_PROD_PER_SALE_PROD_QT)) AS SRVC_GDS_QT,SUM(S1.NET_DEALER_PRC_USD_AM * (S2.BASE_PROD_AM_PC)) AS NET_DEALER_PRC_USD_AM,SUM(S1.SHIP_OPT_QT * (S2.BASE_PROD_PER_SALE_PROD_QT)) AS SHIP_OPT_QT FROM STG_FIN_RZ_SHIP_DTL_MDL_UNIT_SKU_QT_ETL S1 INNER JOIN SRC_SYS_D ON S1.SRC_SYS_KY = SRC_SYS_D.SRC_SYS_KY INNER JOIN STG_FIN_RZ_SO_SLS_PROD_BASE_PROD_B_D_ETL S2 ON S1.orig_PROD_ID = S2.SLS_PROD_ID AND SRC_SYS_D.ROLLUP_DFLT_CO_ID = S2.SPRN_CO_ID LEFT JOIN STG_FIN_RZ_SO_PROD_D_ETL S3 ON S2.BASE_PROD_ID = S3.PROD_ID AND SRC_SYS_D.ROLLUP_DFLT_CO_ID = S3.SPRN_CO_ID WHERE S2.SLS_PROD_ID <> '?' AND NOT (S1.SRC_SYS_KY IN (27,2027,6027,8027,6868,8868) AND S1.REC_EXPLN_CD = 'P') GROUP BY SHIP_ID, S1.SRC_SYS_KY, SHIP_LN_ITM_ID, SO_ADJ_CD, SHIP_DT, EFF_FRM_GMT_TS, REC_EXPLN_CD, S2.BASE_PROD_ID) SOURCE2 INNER JOIN (SELECT S1.SHIP_ID,S1.SHIP_LN_ITM_ID,S1.SHIP_DT,S1.EFF_FRM_GMT_TS,S1.SRC_SYS_KY,S1.CONTRA_FG,S1.BUS_AREA_CD,S1.SO_ADJ_CD,S2.BASE_PROD_ID AS PROD_ID,S1.SLDT_CUST_ID,S1.SHPT_CUST_ID,S1.BILT_CUST_ID,S1.END_CUST_ID,S1.MGMT_GEO_CD,S1.SO_TYPE_CD,S1.OM_SRC_SYS_KY,S1.FIN_CLOSE_DT,S1.SRC_PROD_LN_ID,S1.FUNC_AREA_CD,S1.PRFT_CTR_CD,'C' AS REC_EXPLN_CD,S1.CROSS_BORD_FG,S1.SO_ID,S1.SO_LN_ITM_ID,S1.SLS_CHNL_CD,S1.DOC_CRNCY_CD,S1.QTA_PROD_LN_ID,S1.EFF_TO_GMT_TS,S1.ORD_CRT_DT,S1.CUST_REQD_DLVR_DT,S1.INVN_CLS_CD,S1.QTA_PROD_LN_OVERR_FG,S1.SLS_ORG_CD,S1.SHIP_FRM_PLNT_CD,S1.PARNT_SO_LN_ITM_ID,S1.LEGL_CO_CD,S1.SO_MTHD_CD,S1.LEG_SO_ID,S1.LEG_SO_LN_ITM_ID,TO_TIMESTAMP('{PARAM_BATCH_GMT_START_TS_s}') AS INS_GMT_TS,TO_TIMESTAMP('{PARAM_BATCH_GMT_START_TS_s}') AS UPD_GMT_TS,0 AS REC_ST_NR, {PARAM_BATCH_ID_s} AS LOAD_JOB_NR,S1.LGCL_DEL_FG,S1.DSTRB_CHNL_CD,S1.ORD_RSN_CD,S1.VALU_DLVR_CHAIN_CD,S1.ACCT_MGR_ID,S1.BASE_UNIT_OF_MSR_CD,S1.BIG_DEAL_ID,S1.BUS_TYPE_CD,S1.CMRCL_CD,S1.CUST_APP_CD,S1.CUST_CNTRCT_ID,S1.CUST_PO_ID,S1.DLVR_MTHD_CD,S1.GOV_CNTRCT_ID,S1.INDNT_FG,S1.LC_CD,NULL AS MATL_SLS_UNIT_OF_MSR_CD,S2.BASE_PROD_ID AS ORIG_PROD_ID,S1.PAYM_TERM_CD,S1.PRIM_AGNT_ID,S1.PROJ_ID,S1.PROMO_CD,S1.SECND_AGNT_ID,S1.SHPT_ISO_CTRY_CD,S1.SLS_FRC_CD,S1.SLS_OFF_CD,S1.SLS_REP_CD,S1.SLS_SUB_ENT_CD,S1.SRVC_NOTIF_ID,S1.SUPLYG_DIV_SUB_ENT_CD,S1.WBS_ID,S1.CBN_ID,S1.TEAM_CD_ID,S1.FRST_TCHPT_ACTL_SHIP_TS,S1.LAST_TCHPT_ACTL_SHIP_TS,S1.SHIP_POST_TS,S1.QTA_CR_SUB_ENT_CD,S1.GL_GRP_ACCT_ID,S1.DOC_EXCH_RT,S1.DOC_MTH_3_EXCH_RT,S1.DOC_MTH_12_EXCH_RT,S1.CONV_TYPE_ID,S1.CONV_RT_CD,S1.TRSY_BUS_ORG_CD,S1.ORD_CRT_DT_YR_MTH_CD,S1.UNRSTD_BUS_AREA_CD,S1.PARNT_SO_ID,'I' AS REC_EXPLN_PRCS_CD,S1.ORIG_PROD_ID AS PARNT_PROD_ID,S1.FDW_TRD_INTRA_CO_FG,S1.LC_EXCH_RT,S1.LC_MTH_3_EXCH_RT,S1.LC_MTH_12_EXCH_RT,0 AS SHIP_SLS_QT,S1.PRIM_SO_ADJ_CD,S1.BILL_DOC_DT,S1.BILL_DUE_DT,S1.BILL_DOC_ID,S1.MISC_CHRG_CD,S1.PROD_OPT_MCC_CD,S1.SO_ADJ_ALLOC_FG,S1.ACK_CD,S1.SO_CMPGN_TX,S1.EIFFEL_INVN_CLS_CD,S1.SO_MKT_PGM_TX,S1.PKG_PROD_ID,S1.SRVC_GDS_PROD_ID,S1.USE_NM,S1.VALU_VOL_NM,S1.CONSOLIDTD_INV_FG,S1.DRCT_CUST_IND_CD,S1.ENGMT_MDL_CD,S1.REBATE_ORD_RSN_CD,S1.SD_ITM_CATG_CD FROM STG_FIN_RZ_SHIP_DTL_MDL_UNIT_SKU_QT_ETL S1 INNER JOIN SRC_SYS_D ON S1.SRC_SYS_KY = SRC_SYS_D.SRC_SYS_KY INNER JOIN STG_FIN_RZ_SO_SLS_PROD_BASE_PROD_B_D_ETL S2 ON S1.orig_PROD_ID = S2.SLS_PROD_ID AND SRC_SYS_D.ROLLUP_DFLT_CO_ID = S2.SPRN_CO_ID LEFT JOIN STG_FIN_RZ_SO_PROD_D_ETL S3 ON S2.BASE_PROD_ID = S3.PROD_ID AND SRC_SYS_D.ROLLUP_DFLT_CO_ID = S3.SPRN_CO_ID WHERE S2.SLS_PROD_ID <> '?' AND NOT (S1.SRC_SYS_KY IN (27,2027,6027,8027,6868,8868) AND S1.REC_EXPLN_CD = 'P') GROUP BY S1.SHIP_ID,S1.SHIP_LN_ITM_ID,S1.SHIP_DT,S1.EFF_FRM_GMT_TS,S1.SRC_SYS_KY,S1.CONTRA_FG,S1.BUS_AREA_CD,S1.SO_ADJ_CD,S2.BASE_PROD_ID,S1.SLDT_CUST_ID,S1.SHPT_CUST_ID,S1.BILT_CUST_ID,S1.END_CUST_ID,S1.MGMT_GEO_CD,S1.SO_TYPE_CD,S1.OM_SRC_SYS_KY,S1.FIN_CLOSE_DT,S1.SRC_PROD_LN_ID,S1.FUNC_AREA_CD,S1.PRFT_CTR_CD,S1.CROSS_BORD_FG,S1.SO_ID,S1.SO_LN_ITM_ID,S1.SLS_CHNL_CD,S1.DOC_CRNCY_CD,S1.QTA_PROD_LN_ID,S1.EFF_TO_GMT_TS,S1.ORD_CRT_DT,S1.CUST_REQD_DLVR_DT,S1.INVN_CLS_CD,S1.QTA_PROD_LN_OVERR_FG,S1.SLS_ORG_CD,S1.SHIP_FRM_PLNT_CD,S1.PARNT_SO_LN_ITM_ID,S1.LEGL_CO_CD,S1.SO_MTHD_CD,S1.LEG_SO_ID,S1.LEG_SO_LN_ITM_ID,S1.LGCL_DEL_FG,S1.DSTRB_CHNL_CD,S1.ORD_RSN_CD,S1.VALU_DLVR_CHAIN_CD,S1.ACCT_MGR_ID,S1.BASE_UNIT_OF_MSR_CD,S1.BIG_DEAL_ID,S1.BUS_TYPE_CD,S1.CMRCL_CD,S1.CUST_APP_CD,S1.CUST_CNTRCT_ID,S1.CUST_PO_ID,S1.DLVR_MTHD_CD,S1.GOV_CNTRCT_ID,S1.INDNT_FG,S1.LC_CD,S2.BASE_PROD_ID,S1.PAYM_TERM_CD,S1.PRIM_AGNT_ID,S1.PROJ_ID,S1.PROMO_CD,S1.SECND_AGNT_ID,S1.SHPT_ISO_CTRY_CD,S1.SLS_FRC_CD,S1.SLS_OFF_CD,S1.SLS_REP_CD,S1.SLS_SUB_ENT_CD,S1.SRVC_NOTIF_ID,S1.SUPLYG_DIV_SUB_ENT_CD,S1.WBS_ID,S1.CBN_ID,S1.TEAM_CD_ID,S1.FRST_TCHPT_ACTL_SHIP_TS,S1.LAST_TCHPT_ACTL_SHIP_TS,S1.SHIP_POST_TS,S1.QTA_CR_SUB_ENT_CD,S1.GL_GRP_ACCT_ID,S1.DOC_EXCH_RT,S1.DOC_MTH_3_EXCH_RT,S1.DOC_MTH_12_EXCH_RT,S1.CONV_TYPE_ID,S1.CONV_RT_CD,S1.TRSY_BUS_ORG_CD,S1.ORD_CRT_DT_YR_MTH_CD,S1.UNRSTD_BUS_AREA_CD,S1.PARNT_SO_ID,S1.ORIG_PROD_ID,S1.FDW_TRD_INTRA_CO_FG,S1.LC_EXCH_RT,S1.LC_MTH_3_EXCH_RT,S1.LC_MTH_12_EXCH_RT,S1.PRIM_SO_ADJ_CD,S1.BILL_DOC_DT,S1.BILL_DUE_DT,S1.BILL_DOC_ID,S1.MISC_CHRG_CD,S1.PROD_OPT_MCC_CD,S1.SO_ADJ_ALLOC_FG,S1.ACK_CD,S1.SO_CMPGN_TX,S1.EIFFEL_INVN_CLS_CD,S1.SO_MKT_PGM_TX,S1.PKG_PROD_ID,S1.SRVC_GDS_PROD_ID,S1.USE_NM,S1.VALU_VOL_NM,S1.CONSOLIDTD_INV_FG,S1.DRCT_CUST_IND_CD,S1.ENGMT_MDL_CD,S1.REBATE_ORD_RSN_CD,S1.SD_ITM_CATG_CD) SOURCE1 ON SOURCE1.SHIP_ID = SOURCE2.SHIP_ID AND SOURCE1.SRC_SYS_KY = SOURCE2.SRC_SYS_KY AND SOURCE1.SHIP_LN_ITM_ID = SOURCE2.SHIP_LN_ITM_ID AND SOURCE1.SO_ADJ_CD = SOURCE2.SO_ADJ_CD AND SOURCE1.SHIP_DT = SOURCE2.SHIP_DT AND SOURCE1.EFF_FRM_GMT_TS = SOURCE2.EFF_FRM_GMT_TS AND SOURCE1.REC_EXPLN_CD = SOURCE2.REC_EXPLN_CD AND SOURCE1.PROD_ID = SOURCE2.PROD_ID ;""".format(PARAM_BATCH_ID_s=PARAM_BATCH_ID_s, PARAM_BATCH_GMT_START_TS_s=PARAM_BATCH_GMT_START_TS_s)
    ret_val = execute_sql("4", spark_session, spark_context, sql_context, query_to_execute)
    if ret_val is False:
        print("ERROR executing query {query_to_execute}".format(query_to_execute=query_to_execute))
        sys.exit(4)


    spark_session.stop()


if __name__ == "__main__":
    # datetime object containing current date and time
    now = datetime.now()
     
    # dd/mm/YY H:M:S
    dt_string = now.strftime("%Y/%m/%d %H:%M:%S")
    file_name =  os.path.basename(sys.argv[0])
    print("{} | {} | starting execution".format(dt_string, file_name))
    
    execute()
    
    dt_string = now.strftime("%Y/%m/%d %H:%M:%S")
    
    print("{} | {} | done".format(dt_string, file_name))

#
# end
#
